basePath: /api/v1
definitions:
  xinde_internal_dto_account.ApprovalListData:
    properties:
      company_name:
        example: 宁波鲍斯产业链服务有限公司
        type: string
      created_at:
        example: "2020-09-08 09:08:09"
        type: string
      email:
        example: 13800138000@qq.com
        type: string
      id:
        example: 2
        type: integer
      name:
        example: 张三，真实名称
        type: string
      phone:
        example: "13800138000"
        type: string
      username:
        example: 张三，账号名称
        type: string
      why:
        example: 同意该用户的申请；拒绝该用户的申请
        type: string
    type: object
  xinde_internal_dto_account.ApprovalListPageData:
    properties:
      list:
        items:
          $ref: '#/definitions/xinde_internal_dto_account.ApprovalListData'
        type: array
      page:
        example: 1
        type: integer
      pageSize:
        example: 20
        type: integer
      pages:
        example: 7
        type: integer
      total:
        example: 137
        type: integer
    type: object
  xinde_internal_dto_account.ApprovalListReq:
    type: object
  xinde_internal_dto_account.ApprovalListResp:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/xinde_internal_dto_account.ApprovalListPageData'
      message:
        example: 操作成功
        type: string
      success:
        example: true
        type: boolean
    type: object
  xinde_internal_dto_account.ApproveReq:
    properties:
      status:
        enum:
        - approve
        - reject
        example: approve或者reject
        type: string
      why:
        example: 批准/拒绝用户申请的理由
        type: string
    required:
    - status
    - why
    type: object
  xinde_internal_dto_account.ApproveResp:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: 操作成功
        type: string
      success:
        example: true
        type: boolean
    type: object
  xinde_internal_dto_account.ListData:
    properties:
      company_name:
        example: 宁波鲍斯产业链服务有限公司
        type: string
      created_at:
        example: "2020-09-08 09:08:09"
        type: string
      email:
        example: 13800138000@qq.com
        type: string
      id:
        example: 2
        type: integer
      name:
        example: 张三，真实名称
        type: string
      phone:
        example: "13800138000"
        type: string
      price_level:
        example: price_1
        type: string
      recent_search_at:
        example: "2020-09-08 09:08:09"
        type: string
      remark:
        example: 备注
        type: string
      role:
        example: 普通用户
        type: string
      search_device:
        example: 车削刀杆
        type: string
      username:
        example: 张三，账号名称
        type: string
    type: object
  xinde_internal_dto_account.ListPageData:
    properties:
      list:
        items:
          $ref: '#/definitions/xinde_internal_dto_account.ListData'
        type: array
      page:
        example: 1
        type: integer
      pageSize:
        example: 20
        type: integer
      pages:
        example: 7
        type: integer
      total:
        example: 137
        type: integer
    type: object
  xinde_internal_dto_account.ListReq:
    type: object
  xinde_internal_dto_account.ListResp:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/xinde_internal_dto_account.ListPageData'
      message:
        example: 操作成功
        type: string
      success:
        example: true
        type: boolean
    type: object
  xinde_internal_dto_account.LoginData:
    properties:
      access_token:
        example: jwt_token
        type: string
      email:
        example: 1921771473@qq.com
        type: string
      name:
        example: 金晖
        type: string
      phone:
        example: "13065859690"
        type: string
      username:
        example: 金晖
        type: string
    type: object
  xinde_internal_dto_account.LoginReq:
    properties:
      password:
        example: "923845797582"
        type: string
      username:
        example: 金晖
        type: string
    required:
    - password
    - username
    type: object
  xinde_internal_dto_account.LoginResp:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/xinde_internal_dto_account.LoginData'
      message:
        example: 操作成功
        type: string
      success:
        example: true
        type: boolean
    type: object
  xinde_internal_dto_account.RegisterReq:
    properties:
      company_address:
        example: 浙江省宁波市奉化区江口街道聚潮路55号，可选
        type: string
      company_name:
        example: 宁波鲍斯产业链服务有限公司
        type: string
      confirmed_password:
        example: "923845797582"
        type: string
      email:
        example: 1921771473@qq.com，可选
        type: string
      name:
        example: 金晖，真实姓名
        type: string
      password:
        example: "923845797582"
        type: string
      phone:
        example: "13065859690"
        type: string
      username:
        example: 金晖，账号名称
        type: string
    required:
    - company_name
    - confirmed_password
    - name
    - password
    - phone
    - username
    type: object
  xinde_internal_dto_account.RegisterResp:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: 操作成功
        type: string
      success:
        example: true
        type: boolean
    type: object
  xinde_internal_dto_account.ResetRemarkReq:
    properties:
      remark:
        example: 这是一条备注
        type: string
    type: object
  xinde_pkg_response.Response:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 响应数据，空时不返回该字段
      message:
        description: 响应消息
        type: string
      success:
        description: 是否成功
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for xinde.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: xinde API
  version: "1.0"
paths:
  /api/v1/account/login:
    post:
      consumes:
      - application/json
      description: 用户登录，返回JWT token和用户基本信息
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.LoginResp'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 用户登录
      tags:
      - Account
  /api/v1/account/register:
    post:
      consumes:
      - application/json
      description: 用户名，真实姓名，公司名称，公司地址（可选），密码，手机号，邮箱（可选）
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.RegisterResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.RegisterResp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.RegisterResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.RegisterResp'
      summary: 注册一个新用户
      tags:
      - Account
  /api/v1/admin/account/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除用户
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "401":
          description: access_token有错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "403":
          description: 没有管理员权限
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "404":
          description: 没有该用户
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 删除用户
      tags:
      - Account
  /api/v1/admin/account/approval/{id}:
    post:
      consumes:
      - application/json
      description: 批准用户申请，管理员决定是否同意用户的注册申请
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.ApproveReq'
      produces:
      - application/json
      responses:
        "200":
          description: 审批成功
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.ApproveResp'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "401":
          description: access_token有错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "403":
          description: 没有管理员权限
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "404":
          description: 没有该用户
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "409":
          description: 用户已经被审批
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 批准用户申请
      tags:
      - Account
  /api/v1/admin/account/approval/list:
    get:
      consumes:
      - application/json
      description: 根据前端传来的字段，返回对应的待审批列表/已同意申请/已拒绝申请的用户列表，根据创建时间降序排列
      parameters:
      - description: 审批列表 Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.ApprovalListReq'
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.ApprovalListResp'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 管理员查看用户审批列表
      tags:
      - Account
  /api/v1/admin/account/list:
    get:
      consumes:
      - application/json
      description: 返回已被通过注册申请的用户信息
      parameters:
      - description: 用户列表 Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.ListReq'
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            $ref: '#/definitions/xinde_internal_dto_account.ListResp'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 管理员查看用户列表
      tags:
      - Account
  /api/v1/admin/account/remark/{id}:
    patch:
      consumes:
      - application/json
      description: 管理员根据用户ID修改用户的备注信息
      parameters:
      - description: ResetRemark　Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/xinde_internal_dto_account.ResetRemarkReq'
      produces:
      - application/json
      responses:
        "200":
          description: 重置密码成功
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "401":
          description: access_token有错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "403":
          description: 没有管理员权限
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "404":
          description: 没有该用户
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 修改
      tags:
      - Account
  /api/v1/admin/account/reset/password/{id}:
    post:
      consumes:
      - application/json
      description: 管理员根据用户ID重置用户的密码为123456
      produces:
      - application/json
      responses:
        "200":
          description: 重置密码成功
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "401":
          description: access_token有错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "403":
          description: 没有管理员权限
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "404":
          description: 没有该用户
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/xinde_pkg_response.Response'
      summary: 重置用户密码
      tags:
      - Account
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Ping server
      tags:
      - health
swagger: "2.0"
